{"uid":"fca945ca89b20860","name":"test_create_user","fullName":"tests.users.test_users.TestUsersService#test_create_user","historyId":"98e087b69193d615d87f36f14a2fc045","time":{"start":1736531052038,"stop":1736531053068,"duration":1030},"status":"failed","statusMessage":"AssertionError: assert 401 == 200\n +  where 401 = <Response [401]>.status_code","statusTrace":"self = <test_users.TestUsersService object at 0x7f5d87bfec10>\nvalid_user_payload = {'email': 'jennifer04@example.net', 'name': 'George', 'nickname': 'richardsdavid', 'password': '@2Dd8K6iw+'}\n\n    def test_create_user(self, valid_user_payload):\n        response = self.users_service \\\n            .create_user_with_payload(valid_user_payload)\n    \n>       assert response.status_code == 200\nE       assert 401 == 200\nE        +  where 401 = <Response [401]>.status_code\n\ntests/users/test_users.py:14: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1736531048852,"stop":1736531048916,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"faker","time":{"start":1736531048916,"stop":1736531048917,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_env","time":{"start":1736531048917,"stop":1736531050745,"duration":1828},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1736531052037,"stop":1736531052037,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"valid_user_payload","time":{"start":1736531052037,"stop":1736531052038,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 401 == 200\n +  where 401 = <Response [401]>.status_code","statusTrace":"self = <test_users.TestUsersService object at 0x7f5d87bfec10>\nvalid_user_payload = {'email': 'jennifer04@example.net', 'name': 'George', 'nickname': 'richardsdavid', 'password': '@2Dd8K6iw+'}\n\n    def test_create_user(self, valid_user_payload):\n        response = self.users_service \\\n            .create_user_with_payload(valid_user_payload)\n    \n>       assert response.status_code == 200\nE       assert 401 == 200\nE        +  where 401 = <Response [401]>.status_code\n\ntests/users/test_users.py:14: AssertionError","steps":[{"name":"Create user with payload","time":{"start":1736531052038,"stop":1736531053068,"duration":1030},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"payload","value":"{'email': 'jennifer04@example.net', 'password': '@2Dd8K6iw+', 'name': 'George', 'nickname': 'richardsdavid'}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"b1a3a2e74068557e","name":"API Response","source":"b1a3a2e74068557e.json","type":"application/json","size":127}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"feature","value":"Users Service"},{"name":"parentSuite","value":"tests.users"},{"name":"suite","value":"test_users"},{"name":"subSuite","value":"TestUsersService"},{"name":"host","value":"e49ffdaf7f6a"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.users.test_users"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"1521dfa032778e08","reportUrl":"https://in7hesky.github.io/pytest-requests-pydantic-allure/2//#testresult/1521dfa032778e08","status":"failed","statusDetails":"AssertionError: assert 401 == 200\n +  where 401 = <Response [401]>.status_code","time":{"start":1736530849339,"stop":1736530849966,"duration":627}}]},"tags":[]},"source":"fca945ca89b20860.json","parameterValues":[]}